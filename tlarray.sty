%
% tlarray.sty
%

%%%% package declaration
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{tlarray}[2015/11/16 v0.2]
\def\tlar@pkgname{tlarray}

%%%% error messages
\def\tlar@warn{\PackageWarningNoLine\tlar@pkgname}
\def\tlar@error{\PackageError\tlar@pkgname}

%%%% counters and ifs
\newcount\tlar@calc@cnt
\newif\if@tlar@loop@\@tlar@loop@false
\newif\if@tlar@get@\@tlar@get@false

%%%% check commands
\def\tlar@check@array#1{\@ifundefined{tlar@#1@num}{\tlar@error{Undefined Array}}{}}
\def\tlar@check@index#1#2{\begingroup
  \@tempcnta#2\@tempcntb\csname tlar@#1@num\endcsname\relax
  \advance\@tempcntb\m@ne
  \ifnum\@tempcnta<\z@\tlar@error{You can't use minus number for index}\fi
  \ifnum\@tempcnta>\@tempcntb\tlar@error{Try to access non-exist index}\fi
\endgroup}

%%%% utility commands
\def\tlar@glet{\global\let}
\def\tlar@prepare#1{\@ifnextchar[{\tlar@set@cs#1}{\@tlar@get@false#1}}
\def\tlar@set@cs#1[#2]{\@tlar@get@true\def\tlar@cs{#2}#1}
\def\tlar@return#1{\if@tlar@get@\expandafter\xdef\tlar@cs{#1}\else#1\fi\@tlar@get@false}

%%%% declaration
\def\NewArray{\tlar@new@array}
\def\tlar@new@array#1{\expandafter\xdef\csname tlar@#1@num\endcsname{0}}

%%%% get and output
\def\LengthofArray{\tlar@prepare\tlar@length@of@array}
\let\SizeofArray\LengthofArray

\def\tlar@length@of@array#1{% #1:Array(str)
  \tlar@check@array{#1}\expandafter\tlar@return\csname tlar@#1@num\endcsname
}

\def\GetArray{\tlar@prepare\tlar@get@array}

\def\tlar@get@array#1#2{\begingroup  % #1:array(str) #2:index(int)
  \tlar@check@array{#1}\tlar@check@index{#1}{#2}\@tempcnta#2\relax
  \expandafter\tlar@return\csname tlar@#1@\the\@tempcnta\endcsname
\endgroup}

\def\ShowArray#1{\begingroup  % #1:array(str)
  \tlar@check@array{#1}%
  \@tempcnta\z@\@tempcntb\csname tlar@#1@num\endcsname\relax
  \advance\@tempcntb\m@ne
  \@whilenum\@tempcnta<\@tempcntb\do{%
    \csname tlar@#1@\the\@tempcnta\endcsname,\space
    \advance\@tempcnta\@ne
  }\csname tlar@#1@\the\@tempcnta\endcsname
\endgroup}

%%%% push, pop, shift, unshift

\def\PushArray#1#2{% #1:array(str) #2:value(any)
  \tlar@check@array{#1}%
  \tlar@push@array{#1}{#2}%
}

\def\tlar@push@array#1#2{\begingroup  % #1:array(str) #2:value(any)
  \@tempcnta\csname tlar@#1@num\endcsname\relax
  \expandafter\gdef\csname tlar@#1@\the\@tempcnta\endcsname{#2}%
  \advance\@tempcnta\@ne
  \expandafter\xdef\csname tlar@#1@num\endcsname{\the\@tempcnta}%
\endgroup}

\def\tlar@push@array@r#1#2{\tlar@push@array{#2}{#1}}%

\def\PopArray{\tlar@prepare\tlar@pop@array}

\def\tlar@pop@array#1{\begingroup  % #1:array(str)
  \tlar@check@array{#1}\@tempcnta\csname tlar@#1@num\endcsname\relax
  \ifnum\@tempcnta>\z@
    \advance\@tempcnta\m@ne
    \expandafter\tlar@return\csname tlar@#1@\the\@tempcnta\endcsname
    \expandafter\xdef\csname tlar@#1@num\endcsname{\the\@tempcnta}%
  \else\tlar@warn{Try to pop empty array}\fi
\endgroup}

\def\ShiftArray{\tlar@prepare\tlar@shift@array}

\def\tlar@shift@array#1{\begingroup  % #1:array(str)
  \tlar@check@array{#1}\@tempcnta\csname tlar@#1@num\endcsname\relax
  \ifnum\@tempcnta>\z@
    \expandafter\tlar@return\csname tlar@#1@0\endcsname
    \@tempcntb\@ne\relax
    \@whilenum\@tempcntb<\@tempcnta\do{%
      \expandafter\let\expandafter\tlar@temp\csname tlar@#1@\the\@tempcntb\endcsname
      \advance\@tempcntb\m@ne
      \expandafter\tlar@glet\csname tlar@#1@\the\@tempcntb\endcsname\tlar@temp
      \advance\@tempcntb\tw@
    }%
    \advance\@tempcnta\m@ne
    \expandafter\xdef\csname tlar@#1@num\endcsname{\the\@tempcnta}%
  \else\tlar@warn{Try to shift empty array}\fi
\endgroup}

\def\UnshiftArray#1#2{% #1:array(str) #2:value(any)
  \tlar@check@array{#1}%
  \tlar@unshift@array{#1}{#2}%
}

\def\tlar@unshift@array#1#2{\begingroup  % #1:array(str) #2:value(any)
  \@tempcnta\csname tlar@#1@num\endcsname\relax
  \@tempcntb\@tempcnta\relax
  \advance\@tempcntb\m@ne
  \@whilenum\@tempcntb>\m@ne\do{%
    \expandafter\let\expandafter\tlar@temp\csname tlar@#1@\the\@tempcntb\endcsname
    \advance\@tempcntb\@ne
    \expandafter\tlar@glet\csname tlar@#1@\the\@tempcntb\endcsname\tlar@temp
    \advance\@tempcntb\m@ne\advance\@tempcntb\m@ne
  }%
  \expandafter\gdef\csname tlar@#1@0\endcsname{#2}%
  \advance\@tempcnta\@ne
  \expandafter\xdef\csname tlar@#1@num\endcsname{\the\@tempcnta}%
\endgroup}

%%%% basic operation

\def\InsertArray#1#2#3{\begingroup  % #1:array(str) #2:index #3:value(any)
  \tlar@check@array{#1}%
  \@tempcnta#2\@tempcntb\csname tlar@#1@num\endcsname\relax
  \begingroup\advance\@tempcnta\m@ne\advance\@tempcntb\m@ne
  \@whilenum\@tempcnta<\@tempcntb\do{%
    \expandafter\let\expandafter\tlar@temp\csname tlar@#1@\the\@tempcntb\endcsname
    \advance\@tempcntb\@ne
    \expandafter\tlar@glet\csname tlar@#1@\the\@tempcntb\endcsname\tlar@temp
    \advance\@tempcntb\m@ne\advance\@tempcntb\m@ne
  }\endgroup\begingroup\advance\@tempcnta\m@ne\advance\@tempcntb\m@ne
  \@whilenum\@tempcnta>\@tempcntb\do{%
    \expandafter\tlar@glet\csname tlar@#1@\the\@tempcnta\endcsname\relax
    \advance\@tempcnta\m@ne
  }\endgroup
  \expandafter\gdef\csname tlar@#1@\the\@tempcnta\endcsname{#3}\advance\@tempcntb\@ne
  \ifnum\@tempcnta<\@tempcntb\else\advance\@tempcnta\@ne\@tempcntb\@tempcnta\fi
  \expandafter\xdef\csname tlar@#1@num\endcsname{\the\@tempcntb}%
\endgroup}

\def\DeleteArray#1#2{% #1:array(str) #2:index(int)
  \tlar@check@array{#1}\tlar@check@index{#1}{#2}%
  \tlar@delete@array{#1}{#2}%
}

\def\tlar@delete@array#1#2{\begingroup  % #1:array(str) #2:index(int)
  \@tempcnta#2\@tempcntb\csname tlar@#1@num\endcsname\relax
  \begingroup\advance\@tempcnta\@ne
  \@whilenum\@tempcnta<\@tempcntb\do{%
    \expandafter\let\expandafter\tlar@temp\csname tlar@#1@\the\@tempcnta\endcsname
    \advance\@tempcnta\m@ne
    \expandafter\tlar@glet\csname tlar@#1@\the\@tempcnta\endcsname\tlar@temp
    \advance\@tempcnta\tw@
  }\endgroup\advance\@tempcntb\m@ne
  \expandafter\xdef\csname tlar@#1@num\endcsname{\the\@tempcntb}%
\endgroup}

\def\SpliceArray#1#2#3{\begingroup  % #1:array(str) #2:index(int) #3:value(any)
  \tlar@check@array{#1}\tlar@check@index{#1}{#2}\@tempcnta#2\relax
  \expandafter\gdef\csname tlar@#1@\the\@tempcnta\endcsname{#3}%
\endgroup}

\def\ReplaceArray#1#2#3{\begingroup  % #1:array(str) #2:value1(any) #3:value2(any)
  \tlar@check@array{#1}\def\tlar@temp{#2}%
  \@tempcnta\z@\@tempcntb\csname tlar@#1@num\endcsname\relax
  \@whilenum\@tempcnta<\@tempcntb\do{%
    \expandafter\ifx\csname tlar@#1@\the\@tempcnta\endcsname\tlar@temp
      \expandafter\gdef\csname tlar@#1@\the\@tempcnta\endcsname{#3}%
    \fi\advance\@tempcnta\@ne
  }%
\endgroup}

\def\RemoveArray#1#2{\begingroup  % #1:array #2:value(any)
  \tlar@check@array{#1}\def\tlar@temp{#2}%
  \@tempcnta\z@\@tempcntb\csname tlar@#1@num\endcsname\relax
  \@whilenum\@tempcnta<\@tempcntb\do{%
    \expandafter\ifx\csname tlar@#1@\the\@tempcnta\endcsname\tlar@temp
      \tlar@delete@array{#1}{\@tempcnta}%
    \fi\advance\@tempcnta\@ne
  }%
\endgroup}

\def\XSwapArray#1#2#3#4{% #1:array1(str) #2:index1(int) #3:array2(str) #4:index2(int)
  \tlar@check@array{#1}\tlar@check@array{#3}\tlar@xswap{#1}{#2}{#3}{#4}%
}

\def\SwapArray#1#2#3{% #1:array1(str) #2:index1(int) #3:index2(int)
  \tlar@check@array{#1}\tlar@xswap{#1}{#2}{#1}{#3}%
}

\def\tlar@xswap#1#2#3#4{\begingroup
  \@tempcnta#2\@tempcntb#4\relax
  \expandafter\let\expandafter\tlar@tempa\csname tlar@#1@\the\@tempcnta\endcsname
  \expandafter\let\expandafter\tlar@tempb\csname tlar@#3@\the\@tempcntb\endcsname
  \expandafter\tlar@glet\csname tlar@#1@\the\@tempcnta\endcsname\tlar@tempb
  \expandafter\tlar@glet\csname tlar@#3@\the\@tempcntb\endcsname\tlar@tempa
\endgroup}

\def\ReverseArray#1{\begingroup  % #1:aray(str)
  \tlar@check@array{#1}%
  \@tempcnta\z@\@tempcntb\csname tlar@#1@num\endcsname\relax
  \advance\@tempcntb\m@ne\@tlar@loop@true
  \@whilesw\if@tlar@loop@\fi{%
    \tlar@xswap{#1}{\@tempcnta}{#1}{\@tempcntb}%
    \advance\@tempcnta\@ne\advance\@tempcntb\m@ne
    \ifnum\@tempcnta<\@tempcntb\else\@tlar@loop@false\fi
  }%
\endgroup}

\def\ExpandArray#1#2{\begingroup  % #1:Array(str) #2:index(int)
  \tlar@check@array{#1}\tlar@check@index{#1}{#2}%
  \@tempcnta#2\@tempcntb\csname tlar@#1@num\endcsname\relax
  \expandafter\let\expandafter\tlar@temp\csname tlar@#1@\the\@tempcnta\endcsname
  \expandafter\xdef\csname tlar@#1@\the\@tempcnta\endcsname{\tlar@temp}%
\endgroup}

%%%% numeric
\def\SumArray{\tlar@prepare\tlar@sum@array}

\def\tlar@sum@array#1{\begingroup  % #1:Array(str)
  \tlar@check@array{#1}%
  \@tempcnta\z@\@tempcntb\csname tlar@#1@num\endcsname\tlar@calc@cnt\z@\relax
  \@whilenum\@tempcnta<\@tempcntb\do{%
    \expandafter\advance\expandafter\tlar@calc@cnt\csname tlar@#1@\the\@tempcnta\endcsname
    \advance\@tempcnta\@ne
  }%
  \tlar@return{\the\tlar@calc@cnt}%
\endgroup}

\def\MaxofArray{\tlar@prepare\tlar@max@of@array}

\def\tlar@max@of@array#1{\begingroup  % #1:Array(str)
  \tlar@check@array{#1}%
  \@tempcnta\@ne\@tempcntb\csname tlar@#1@num\endcsname
  \tlar@calc@cnt\csname tlar@#1@0\endcsname\relax
  \@whilenum\@tempcnta<\@tempcntb\do{%
    \expandafter\ifnum\csname tlar@#1@\the\@tempcnta\endcsname>\tlar@calc@cnt
      \tlar@calc@cnt\csname tlar@#1@\the\@tempcnta\endcsname\relax
    \fi\advance\@tempcnta\@ne
  }%
  \tlar@return{\the\tlar@calc@cnt}%
\endgroup}

\def\MinofArray{\tlar@prepare\tlar@min@of@array}

\def\tlar@min@of@array#1{\begingroup  % #1:Array(str)
  \tlar@check@array{#1}%
  \@tempcnta\@ne\@tempcntb\csname tlar@#1@num\endcsname
  \tlar@calc@cnt\csname tlar@#1@0\endcsname\relax
  \@whilenum\@tempcnta<\@tempcntb\do{%
    \expandafter\ifnum\csname tlar@#1@\the\@tempcnta\endcsname<\tlar@calc@cnt
      \tlar@calc@cnt\csname tlar@#1@\the\@tempcnta\endcsname\relax
    \fi\advance\@tempcnta\@ne
  }%
  \tlar@return{\the\tlar@calc@cnt}%
\endgroup}

%%%% array and string
\def\toStringArray#1{\begingroup  % #1:array(str)
  \tlar@check@array{#1}%
  \@tempcnta\z@\@tempcntb\csname tlar@#1@num\endcsname\relax
  \@whilenum\@tempcnta<\@tempcntb\do{%
    \csname tlar@#1@\the\@tempcnta\endcsname
    \advance\@tempcnta\@ne
  }%
\endgroup}

\def\StringtoArray#1#2{\begingroup  % #1:array(str)  #2:value(any)
  \tlar@check@array{#1}%
  \@tfor\member:=#2\do{\expandafter\tlar@push@array@r\expandafter{\member}{#1}}%
\endgroup}

%%%% repetition
\def\EachArray#1#2{\begingroup  % #1:Array(str) #2:Macro(cs)
  \tlar@check@array{#1}%
  \@tempcnta\csname tlar@#1@num\endcsname\relax
  \advance\@tempcnta\m@ne
  \@whilenum\m@ne<\@tempcnta\do{#2{#1}{\@tempcnta}\advance\@tempcnta\m@ne}%
\endgroup}

%%%% destruction
\def\DestructArray#1{\tlar@check@array{#1}\expandafter\let\csname tlar@#1@num\endcsname\relax}

%% EOF
